{"version":3,"sources":["components/Button.js","components/links/About.js","components/links/HowToUse.js","components/Footer.js","components/Login.js","components/DeleteHabit.js","components/HabitCard.js","components/HabitList.js","components/UserOptions.js","components/AddHabit.js","App.js","reportWebVitals.js","index.js"],"names":["Button","btnFunction","btnDisplay","functionLiteral","className","onClick","e","localStorage","removeItem","window","location","reload","preventDefault","About","id","to","style","marginBottom","HowToUse","color","background","borderRadius","Footer","href","target","size","marginRight","signUpConfirm","Login","validLoginCheck","serverUrl","useState","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","remember","setRemember","errMsg","setErrMsg","name","type","placeholder","value","onChange","checked","htmlFor","fetch","method","headers","body","JSON","stringify","rememberMe","then","res","json","token","setItem","message","validateLogin","validateSignup","document","getElementById","classList","remove","showConfirmPassword","DeleteHabit","habitDesc","habitDeletedCheck","getItem","Authorization","description","deleteHabitRequest","HabitCard","habit","passedClass","contains","failed","completed","lastUpdated","Date","getTime","setHours","logHabit","active","daysLogged","goal","daysLeft","HabitList","history","useHistory","userHabits","setUserHabits","loading","setLoading","currentDate","Timestamp","go","editedHabits","length","map","index","updatedToday","UserOptions","AddHabit","newHabitSubmitted","setNewHabitSubmitted","addHabitFormClosed","setAddHabitFormClosed","required","defaultChecked","formData","FormData","formDataObj","date","now","append","keys","key","get","App","console","log","process","useEffect","validated","ReactDOM","render","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.9fa69448.chunk.js","sourcesContent":["const Button = ({ btnFunction, btnDisplay, functionLiteral }) => {\r\n    return (\r\n        <button className=\"light-btn\" onClick={\r\n            (e) => {\r\n                if (btnFunction === 'logoutBtn') {\r\n                    localStorage.removeItem('token')\r\n                    window.location.reload()\r\n                } else if (btnFunction === 'submitNewHabitBtn') {\r\n                    // should make sure that all form fields are filled out before add new habit to the database\r\n                    e.preventDefault()\r\n                    functionLiteral()\r\n                } else if (btnFunction === 'closeAddHabitForm') {\r\n                    e.preventDefault()\r\n                    functionLiteral()\r\n                }\r\n            }\r\n        }>\r\n            { btnDisplay }\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import Button from '../Button'\r\nimport { Link } from 'react-router-dom' \r\n\r\nconst About = () => {\r\n    return (\r\n        <div id=\"about-container\">\r\n            <h2>About</h2>\r\n            <p>\r\n                <span>v1.0.0 &nbsp;</span>\r\n                <span>Created 2021</span>\r\n            </p>\r\n            <p>Habit Maker was created for the purpose to help users develop and maintain new habits.</p>\r\n            <p>It also works as a general todo list or project tracker.</p>\r\n            <Link to='/'>\r\n                <p>\r\n                    <Button btnDisplay='Back' btnFunction='backToLoginBtn' style={{marginBottom: '5px'}}/>\r\n                </p>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import Button from '../Button'\r\nimport { Link } from 'react-router-dom' \r\n\r\nconst HowToUse = () => {\r\n    return (\r\n        <div id=\"how-to-use-container\">\r\n            <h2>How To Use</h2>\r\n            <p>Click the 'Add Habit' button to add a new habit.</p>\r\n            <p>Fill out the form and submit.</p>\r\n            <p>How often you need to log your progress depends on whether a given habit is <span style={{color: 'green', background: 'aliceblue', borderRadius: '5px'}}>&nbsp;active&nbsp;</span> or <span style={{color: 'red', background: 'aliceblue', borderRadius: '5px'}}>&nbsp;passive&nbsp;</span></p>\r\n            <p>Active habits need to be updated everyday.</p>\r\n            <p>Passive habits only need to be updated if a habit wasn't done that day.</p>\r\n            <Link to='/'>\r\n                <p>\r\n                    <Button btnDisplay='Back' btnFunction='backToLoginBtn' \r\n                    style={{marginBottom: '5px'}}/>\r\n                </p>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HowToUse\r\n","import { Link } from 'react-router-dom'\r\nimport { FaGithubAlt } from 'react-icons/fa'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div id='footer'>\r\n            <div id='footer-links'>\r\n                <span><Link to=\"/how-to-use\">How to Use</Link></span>\r\n                <div className='footer-link-separator'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\r\n                <span><Link to=\"/about\">About</Link></span>\r\n                <div className='footer-link-separator'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\r\n                <a href=\"https://github.com/mwroberts3/habit-tracker\" target=\"blank\">\r\n            <FaGithubAlt size={20} style={{marginRight: '5px'}}/>\r\n            </a>\r\n                <div className='footer-link-separator'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\r\n            <span>v1.0.0 2021</span> \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { useState } from 'react'\r\nimport { FaCubes } from 'react-icons/fa'\r\n\r\nlet signUpConfirm = false\r\n\r\nconst Login = ( {validLoginCheck, serverUrl} ) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [remember, setRemember] = useState(false)\r\n    \r\n    const [errMsg, setErrMsg] = useState('')\r\n\r\n    const validateLogin = (e) => {\r\n        e.preventDefault()\r\n\r\n        fetch(`${serverUrl}/login`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: email,\r\n                password: password,\r\n                rememberMe: remember\r\n            })\r\n        })\r\n        .then(res => {\r\n            return res.json()\r\n        })\r\n        .then(res => {\r\n            if (res.token) {\r\n                localStorage.setItem('token', res.token)\r\n                validLoginCheck(true)\r\n            } else {\r\n                setErrMsg(res.message)\r\n            }\r\n        })\r\n    }\r\n\r\n    const showConfirmPassword = (e) => {\r\n        e.preventDefault()\r\n        document.getElementById('confirm-password-input').classList.remove('hidden')\r\n    \r\n        signUpConfirm = true\r\n    }\r\n    \r\n    const validateSignup = (e) => {\r\n        e.preventDefault()\r\n\r\n        fetch(`${serverUrl}/signup`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                \"email\": email,\r\n                \"password\": password,\r\n                \"confirmPassword\": confirmPassword,\r\n            })\r\n        })\r\n        .then((res) => res.json())\r\n        .then(res => {\r\n            if (res.token) {\r\n                localStorage.setItem('token', res.token)\r\n                validLoginCheck(true)\r\n            } else {\r\n                setErrMsg(res.message)\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div id='login-container'>\r\n        <div>\r\n            <h1 id=\"login-header\">Habit Target <FaCubes className=\"header-icon\" size={35}/></h1>&nbsp;\r\n        </div>\r\n        <p id='error-msg-display'>{errMsg !== '' ? `${errMsg}` : (<span>&nbsp;</span>)}</p>\r\n        <form className=\"login\" id=\"login-signup-form\" name=\"login\"> \r\n            <input id=\"login-email\" name=\"email\" type=\"text\" placeholder=\"email\" value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n            <input id=\"login-pw\" name=\"password\" type=\"password\" placeholder=\"password\" value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n            <input id='confirm-password-input' className='hidden' name=\"confirmPassword\" type=\"password\" placeholder=\"confirm password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}/>\r\n            <div id='remember-me-container'>\r\n            <input id=\"store-session-checkbox\" type=\"checkbox\" value={remember} onChange={(e) => setRemember(e.target.checked)}/>\r\n            <label htmlFor=\"remember-login\">Remember Me</label>\r\n            </div>\r\n            <div id='login-btns-container'>\r\n            <button id=\"login-submit\" className=\"light-btn\" onClick={(e) => {\r\n                validateLogin(e)\r\n            }}>Login</button>\r\n            <button id=\"signup-submit\" className=\"light-btn\" onClick={(e) => { \r\n                signUpConfirm ? \r\n                validateSignup(e) :showConfirmPassword(e)                    \r\n            }}>Signup</button>\r\n            </div>\r\n        </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import {Redirect} from 'react-router-dom'\r\n\r\nconst DeleteHabit = ({ habitDesc, habitDeletedCheck }) => {\r\n    const deleteHabitRequest = () => {\r\n        let token = localStorage.getItem('token')\r\n\r\n        fetch(`https://habit-target-api.herokuapp.com/habits/delete-habit`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                Authorization: 'Bearer ' + token,\r\n                'Content-Type': 'application/json'\r\n            }, \r\n            body: JSON.stringify({ description: habitDesc })\r\n        })\r\n        .then(() => {\r\n            habitDeletedCheck()\r\n            return (<Redirect to='/' />)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='delete-habit-btn' onClick={() => {\r\n            deleteHabitRequest()\r\n        }}>\r\n            <span className='delete-btn-x'>\r\n                x\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeleteHabit\r\n","import DeleteHabit from './DeleteHabit'\r\n\r\nconst HabitCard = ({ habit, habitDeletedCheck, passedClass, serverUrl }) => {\r\n    const logHabit = (habit) => {\r\n        // Need to somehow check if habit has been completed and I guess log it to some kind of stats collection to then be displayed in the stats component\r\n        let lastUpdated = new Date(new Date().getTime())\r\n        lastUpdated.setHours(0,0,0,0)\r\n\r\n        let token = localStorage.getItem('token')\r\n\r\n        fetch(`${serverUrl}/habits/log-habit`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Authorization: 'Bearer ' + token,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                habitDesc: habit.description,\r\n                lastUpdated\r\n            })\r\n        })\r\n        .then(() => {\r\n            habitDeletedCheck()\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div id={habit.description} className={passedClass} onClick={(e) => {\r\n            if (!e.target.classList.contains('delete-btn-x') && !habit.failed && !habit.completed) logHabit(habit)\r\n        }}>\r\n            { !habit.failed && !habit.completed && \r\n            <div>\r\n                <p>{habit.description}</p>\r\n                <p className={habit.active ? 'active' : 'passive'}>{habit.active ? 'active' : 'passive'}</p>\r\n                <p>Goal: {habit.daysLogged} / {habit.goal} ({habit.daysLeft})\r\n                </p>\r\n                <DeleteHabit habitDesc={habit.description} habitDeletedCheck={ habitDeletedCheck }/>\r\n            </div> }\r\n            { habit.failed && \r\n            <div>\r\n                <p>{habit.description} Failed</p>\r\n                <p>{habit.daysLogged} / {habit.goal}</p>\r\n                <DeleteHabit habitDesc={habit.description} habitDeletedCheck={ habitDeletedCheck }/>\r\n            </div>\r\n            }\r\n            { habit.completed && \r\n            <div>\r\n                <p>{habit.description} Completed</p>\r\n                <p>{habit.daysLogged} / {habit.goal}</p>\r\n                <DeleteHabit habitDesc={habit.description} habitDeletedCheck={ habitDeletedCheck }/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HabitCard\r\n","import { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport HabitCard from './HabitCard'\r\n\r\nconst HabitList = ({validLoginCheck, serverUrl}) => {\r\n    const history = useHistory()\r\n\r\n    const [userHabits, setUserHabits] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    let currentDate = new Date(new Date().getTime())\r\n    currentDate.setHours(0,0,0,0)\r\n    \r\n    let token = localStorage.getItem('token')\r\n\r\n    const habitDeletedCheck = () => {\r\n        setLoading(true)\r\n    }\r\n  \r\n    if (loading) {\r\n        setLoading(false)\r\n        fetch(`${serverUrl}/habits`, {\r\n            method: 'GET',\r\n            headers: {\r\n                Authorization: 'Bearer ' + token,\r\n                'Content-Type': 'application/json',\r\n                Timestamp: currentDate\r\n            }\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.message === \"jwt expired\" || res.message === \"Not authenticated.\") {\r\n                    localStorage.removeItem('token')\r\n                    validLoginCheck(false)\r\n\r\n                    history.go(0)\r\n                } else {\r\n                    setUserHabits(res.editedHabits)\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div id='habit-list'>\r\n            {\r\n            userHabits.length > 0 &&\r\n                userHabits.map((habit, index) => (\r\n                <HabitCard serverUrl={ serverUrl }key={ index } habit={ habit } habitDeletedCheck = { habitDeletedCheck } passedClass={ habit.updatedToday ? habit.active ? 'habit-card habit-logged-active' : 'habit-card habit-logged-passive' : 'habit-card'}/>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HabitList\r\n","import Button from './Button'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst UserOptions = () => {\r\n    return (\r\n        <div id=\"user-options\">\r\n            <div>\r\n            <Link to='/add-habit'>\r\n            <Button btnFunction=\"addHabitBtn\" btnDisplay=\"Add Habit\" />\r\n            </Link>\r\n            <Link to='/stats'>\r\n            </Link>\r\n            </div>\r\n            <Button btnFunction=\"logoutBtn\" btnDisplay=\"Logout\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserOptions\r\n","import Button from './Button'\r\nimport {Redirect} from 'react-router-dom'\r\nimport React, {useState} from 'react'\r\n\r\nconst AddHabit = ({serverUrl}) => {\r\n    const [newHabitSubmitted, setNewHabitSubmitted] = useState(false)\r\n    const [addHabitFormClosed, setAddHabitFormClosed] = useState(false)\r\n\r\n    if (newHabitSubmitted || addHabitFormClosed) {\r\n        return (<Redirect to='/' />)\r\n    }\r\n\r\n    const closeAddHabitForm = () => {\r\n      setAddHabitFormClosed(true)\r\n    }\r\n\r\n    const submitNewHabit = () => {\r\n\r\n        setNewHabitSubmitted(true)\r\n\r\n        const formData = new FormData(document.getElementById('new-habit-form'))\r\n        let formDataObj = {}\r\n        \r\n        // add local timezone date\r\n        let date = new Date(new Date(Date.now()).getTime())\r\n        date = date.setHours(0,0,0,0)\r\n        formData.append('createdAtDate', new Date(date))\r\n    \r\n        for (let key of formData.keys()) {\r\n            formDataObj[key] = formData.get(key)\r\n        }    \r\n\r\n        let token = localStorage.getItem('token')\r\n\r\n        fetch(`${serverUrl}/habits/add-habit/`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Authorization: 'Bearer ' + token,\r\n                'Content-Type': 'application/json',\r\n                Timestamp: new Date(date)\r\n            },\r\n            body: JSON.stringify(formDataObj)\r\n        })\r\n    }\r\n\r\n    return (\r\n      <div id='add-habit-container'>\r\n        <form id='new-habit-form'>\r\n          <h3>Add New Habit</h3>\r\n          <label htmlFor=\"description\">Short Description</label>\r\n          <input id=\"habit-description\" name=\"description\" type=\"text\" required/>\r\n          <h3>Update Style</h3>\r\n          <input type=\"radio\" name=\"updateStyle\" value=\"active\" />\r\n          <label htmlFor=\"active-update\">active</label>\r\n          <input type=\"radio\" name=\"updateStyle\" value=\"passive\" defaultChecked />\r\n          <label htmlFor=\"passive-update\">passive</label>\r\n          <div>\r\n            <label htmlFor=\"days\">Goal</label>\r\n            <input name=\"daysGoal\" type=\"number\" required/>\r\n            Days\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"days\">Time</label>\r\n            <input name=\"daysLeft\" type=\"number\" required/>\r\n            Days\r\n          </div>\r\n          <Button btnDisplay='Submit' btnFunction='submitNewHabitBtn' functionLiteral={submitNewHabit} />&nbsp;\r\n          <Button btnDisplay='Close' btnFunction='closeAddHabitForm' functionLiteral={closeAddHabitForm} />\r\n        </form>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default AddHabit\r\n","import ReactDOM from 'react-dom'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport { useEffect } from 'react'\n\nimport About from './components/links/About'\nimport HowToUse from './components/links/HowToUse'\nimport Footer from './components/Footer'\nimport Login from './components/Login'\nimport HabitList from './components/HabitList'\nimport UserOptions from './components/UserOptions'\nimport AddHabit from './components/AddHabit'\n\nfunction App() {\n  console.log(process.env)\n\n  let serverUrl;\n\n  if (process.env.NODE_ENV === \"development\") {\n    console.log('dev mode')\n    serverUrl = 'http://localhost:5050'\n  } else {\n    serverUrl = 'https://habit-target-api.herokuapp.com'\n  }\n  \n  // if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n  //   const serverUrl = 'http://localhost:5050'\n  // } else {\n  // }\n    \n  \n  useEffect(() => {\n    if (localStorage.getItem('token')) {\n      validLoginCheck(true)\n    }\n  })\n\n  const validLoginCheck = (validated) => {\n    if (validated) {\n\n      // re-render to show only the habit list contain and user options\n      ReactDOM.render(\n      <Router>\n      <div id=\"total-container\">\n        <div className=\"inner-contents\"> \n          <Route exact path='/'>\n            <UserOptions />\n            <HabitList validLoginCheck={validLoginCheck}  serverUrl={serverUrl}/>\n          </Route>\n          <Route exact path='/add-habit'>\n            <AddHabit serverUrl={serverUrl} />\n          </Route>\n          <Route path='/about' component={About} />\n          <Route path='/how-to-use' component={HowToUse} />\n        </div>\n      </div>\n        <Footer />\n      </Router>\n      , document.getElementById('root'))\n    }\n  }\n\n  return (\n    <Router>\n    <div id=\"total-container\">\n      <div className=\"inner-contents\">\n      <Route exact path='/'>\n          <Login validLoginCheck={ validLoginCheck} serverUrl={serverUrl}/>\n      </Route>\n      <Route path='/about' component={About} />\n      <Route path='/how-to-use' component={HowToUse} />\n      </div>\n      <Footer />\n    </div>\n    </Router>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}