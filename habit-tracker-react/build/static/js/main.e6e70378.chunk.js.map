{"version":3,"sources":["components/Button.js","components/links/About.js","components/links/HowToUse.js","components/Footer.js","components/Login.js","components/DeleteHabit.js","components/HabitCard.js","components/HabitList.js","components/UserOptions.js","components/AddHabit.js","App.js","reportWebVitals.js","index.js"],"names":["Button","btnFunction","btnDisplay","functionLiteral","className","onClick","e","localStorage","removeItem","window","location","reload","preventDefault","About","id","to","style","marginBottom","HowToUse","color","background","borderRadius","Footer","href","target","size","marginRight","signUpConfirm","Login","validLoginCheck","serverUrl","useState","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","remember","setRemember","loginText","setLoginText","errMsg","setErrMsg","name","type","placeholder","value","onChange","checked","htmlFor","fetch","method","headers","body","JSON","stringify","rememberMe","then","res","json","token","setItem","message","validateLogin","document","getElementById","classList","add","closeSignup","validateSignup","remove","showConfirmPassword","DeleteHabit","habitDesc","habitDeletedCheck","getItem","Authorization","description","deleteHabitRequest","HabitCard","habit","passedClass","contains","failed","completed","lastUpdated","Date","getTime","setHours","active","parentNode","logHabit","daysLogged","goal","fontSize","daysLeft","HabitList","history","useHistory","userHabits","setUserHabits","loading","setLoading","currentDate","Timestamp","go","editedHabits","length","map","index","updatedToday","UserOptions","AddHabit","newHabitSubmitted","setNewHabitSubmitted","addHabitFormClosed","setAddHabitFormClosed","required","defaultChecked","formData","FormData","formDataObj","date","now","append","keys","key","get","App","console","log","process","useEffect","validated","ReactDOM","render","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.e6e70378.chunk.js","sourcesContent":["const Button = ({ btnFunction, btnDisplay, functionLiteral }) => {\r\n    return (\r\n        <button className=\"light-btn\" onClick={\r\n            (e) => {\r\n                if (btnFunction === 'logoutBtn') {\r\n                    localStorage.removeItem('token')\r\n                    window.location.reload()\r\n                } else if (btnFunction === 'submitNewHabitBtn') {\r\n                    // should make sure that all form fields are filled out before add new habit to the database\r\n                    e.preventDefault()\r\n                    functionLiteral()\r\n                } else if (btnFunction === 'closeAddHabitForm') {\r\n                    e.preventDefault()\r\n                    functionLiteral()\r\n                }\r\n            }\r\n        }>\r\n            { btnDisplay }\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import Button from '../Button'\r\nimport { Link } from 'react-router-dom' \r\n\r\nconst About = () => {\r\n    return (\r\n        <div id=\"about-container\">\r\n            <h2>About</h2>\r\n            <p>\r\n                <span>v1.0.0 &nbsp;</span>\r\n                <span>Created 2021</span>\r\n            </p>\r\n            <p>Habit Maker was created for the purpose to help users develop and maintain new habits.</p>\r\n            <p>It also works as a general todo list or project tracker.</p>\r\n            <Link to='/'>\r\n                <p>\r\n                    <Button btnDisplay='Back' btnFunction='backToLoginBtn' style={{marginBottom: '5px'}}/>\r\n                </p>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import Button from '../Button'\r\nimport { Link } from 'react-router-dom' \r\n\r\nconst HowToUse = () => {\r\n    return (\r\n        <div id=\"how-to-use-container\">\r\n            <h2>How To Use</h2>\r\n            <p>Create a new account by clicking the signup button on the login page. Input your email and </p>\r\n            <p>Click the 'Add Habit' button to add a new habit.</p>\r\n            <p>Fill out the form and submit.</p>\r\n            <p>How often you need to log your progress depends on whether a given habit is <span style={{color: 'green', background: 'aliceblue', borderRadius: '5px'}}>&nbsp;active&nbsp;</span> or <span style={{color: 'red', background: 'aliceblue', borderRadius: '5px'}}>&nbsp;passive&nbsp;</span></p>\r\n            <p>Active habits need to be updated everyday.</p>\r\n            <p>Passive habits only need to be updated if a habit wasn't done that day.</p>\r\n            <Link to='/'>\r\n                <p>\r\n                    <Button btnDisplay='Back' btnFunction='backToLoginBtn' \r\n                    style={{marginBottom: '5px'}}/>\r\n                </p>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HowToUse\r\n","import { Link } from 'react-router-dom'\r\nimport { FaGithubAlt } from 'react-icons/fa'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div id='footer'>\r\n            <div id='footer-links'>\r\n                <span><Link to=\"/how-to-use\">How to Use</Link></span>\r\n                <div className='footer-link-separator'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\r\n                <span><Link to=\"/about\">About</Link></span>\r\n                <div className='footer-link-separator'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\r\n                <a href=\"https://github.com/mwroberts3/habit-tracker\" target=\"blank\">\r\n            <FaGithubAlt size={20} style={{marginRight: '5px'}}/>\r\n            </a>\r\n                <div className='footer-link-separator'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\r\n            <span>v1.0.0 2021</span> \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { useState } from 'react'\r\nimport { FaBullseye } from 'react-icons/fa'\r\n\r\nlet signUpConfirm = false\r\n\r\nconst Login = ( {validLoginCheck, serverUrl} ) => {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [remember, setRemember] = useState(false)\r\n    const [loginText, setLoginText] = useState('Login')\r\n    \r\n    const [errMsg, setErrMsg] = useState('')\r\n\r\n    const validateLogin = (e) => {\r\n        e.preventDefault()\r\n\r\n        fetch(`${serverUrl}/login`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                username: username,\r\n                password: password,\r\n                rememberMe: remember\r\n            })\r\n        })\r\n        .then(res => {\r\n            return res.json()\r\n        })\r\n        .then(res => {\r\n            if (res.token) {\r\n                localStorage.setItem('token', res.token)\r\n                validLoginCheck(true)\r\n            } else {\r\n                setErrMsg(res.message)\r\n            }\r\n        })\r\n    }\r\n\r\n    const closeSignup = (e) => {\r\n        e.preventDefault()\r\n        document.getElementById('confirm-password-input').classList.add('hidden')\r\n\r\n        signUpConfirm = false\r\n\r\n        setLoginText('Login')\r\n    }\r\n\r\n    const showConfirmPassword = (e) => {\r\n        e.preventDefault()\r\n        document.getElementById('confirm-password-input').classList.remove('hidden')\r\n    \r\n        signUpConfirm = true\r\n\r\n        setLoginText('Cancel')\r\n    }\r\n    \r\n    const validateSignup = (e) => {\r\n        e.preventDefault()\r\n\r\n        fetch(`${serverUrl}/signup`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                \"username\": username,\r\n                \"password\": password,\r\n                \"confirmPassword\": confirmPassword,\r\n            })\r\n        })\r\n        .then((res) => res.json())\r\n        .then(res => {\r\n            if (res.token) {\r\n                localStorage.setItem('token', res.token)\r\n                validLoginCheck(true)\r\n            } else {\r\n                setErrMsg(res.message)\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <h1 id=\"HT-header\">Habit Target</h1> <FaBullseye className=\"header-icon\" size={52}/>\r\n        <div id='login-container'>\r\n        <p id='error-msg-display'>{errMsg !== '' ? `${errMsg}` : (<span>&nbsp;</span>)}</p>\r\n        <form className=\"login\" id=\"login-signup-form\" name=\"login\"> \r\n            <input id=\"login-email\" name=\"username\" type=\"text\" placeholder=\"username\" value={username} onChange={(e) => setUsername(e.target.value)}/>\r\n            <input id=\"login-pw\" name=\"password\" type=\"password\" placeholder=\"password\" value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n            <input id='confirm-password-input' className='hidden' name=\"confirmPassword\" type=\"password\" placeholder=\"confirm password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}/>\r\n            <div id='remember-me-container'>\r\n                <input id=\"store-session-checkbox\" type=\"checkbox\" value={remember} onChange={(e) => setRemember(e.target.checked)}/>\r\n                <label htmlFor=\"remember-login\">Remember Me</label>\r\n            </div>\r\n            <div id='login-btns-container'>\r\n            <button id=\"login-submit\" className=\"light-btn\" onClick={(e) => {\r\n                loginText !== 'Cancel' ?validateLogin(e) : closeSignup(e)\r\n            }}>{loginText}</button>\r\n            <button id=\"signup-submit\" className=\"light-btn\" onClick={(e) => { \r\n                signUpConfirm ? \r\n                validateSignup(e) :showConfirmPassword(e)                    \r\n            }}>Signup</button>\r\n            </div>\r\n        </form>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","const DeleteHabit = ({ habitDesc, habitDeletedCheck }) => {\r\n    const deleteHabitRequest = (e) => {\r\n        let token = localStorage.getItem('token')\r\n\r\n        fetch(`https://habit-target-api.herokuapp.com/habits/delete-habit`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                Authorization: 'Bearer ' + token,\r\n                'Content-Type': 'application/json'\r\n            }, \r\n            body: JSON.stringify({ description: habitDesc })\r\n        })\r\n        .then(() => {\r\n            habitDeletedCheck(e)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='delete-habit-btn' onClick={(e) => {\r\n            deleteHabitRequest(e)\r\n        }}>\r\n            <span className='delete-btn-x'>x</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeleteHabit\r\n","import DeleteHabit from './DeleteHabit'\r\n\r\nconst HabitCard = ({ habit, habitDeletedCheck, passedClass, serverUrl }) => {\r\n    const logHabit = (e, habit) => {\r\n        // Need to somehow check if habit has been completed and I guess log it to some kind of stats collection to then be displayed in the stats component\r\n        let lastUpdated = new Date(new Date().getTime())\r\n        lastUpdated.setHours(0,0,0,0)\r\n\r\n        let token = localStorage.getItem('token')\r\n\r\n        fetch(`${serverUrl}/habits/log-habit`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Authorization: 'Bearer ' + token,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                habitDesc: habit.description,\r\n                lastUpdated\r\n            })\r\n        })\r\n        .then(() => {\r\n            if (habit.active) {\r\n                e.target.parentNode.parentNode.classList.add('habit-logged-active')\r\n            } else {\r\n                e.target.parentNode.parentNode.classList.add('habit-logged-passive')\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div id={habit.description} className={passedClass} onClick={(e) => {\r\n            if (!e.target.classList.contains('delete-btn-x') && !habit.failed && !habit.completed) logHabit(e, habit)\r\n        }}>\r\n            { !habit.failed && !habit.completed && \r\n            <div>\r\n                <p>{habit.description}</p>\r\n                <p className={habit.active ? 'active' : 'passive'}>{habit.active ? 'active' : 'passive'}</p>\r\n                <p>Goal: {habit.daysLogged} / {habit.goal} <span style={{color:\"#777\", fontSize:\"14px\"}}>[{habit.daysLeft}]</span>\r\n                </p>\r\n                <DeleteHabit habitDesc={habit.description} habitDeletedCheck={ habitDeletedCheck }/>\r\n            </div> }\r\n            { habit.failed && \r\n            <div>\r\n                <p>{habit.description} Failed</p>\r\n                <p>{habit.daysLogged} / {habit.goal}</p>\r\n                <DeleteHabit habitDesc={habit.description} habitDeletedCheck={ habitDeletedCheck }/>\r\n            </div>\r\n            }\r\n            { habit.completed && \r\n            <div>\r\n                <p>{habit.description} Completed</p>\r\n                <p>{habit.daysLogged} / {habit.goal}</p>\r\n                {/* user should be able to click this to restart the habit from the beginning */}\r\n                <p>Reload Habit?</p>\r\n                <DeleteHabit habitDesc={habit.description} habitDeletedCheck={ habitDeletedCheck }/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HabitCard\r\n","import { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport HabitCard from './HabitCard'\r\n\r\nconst HabitList = ({validLoginCheck, serverUrl}) => {\r\n    const history = useHistory()\r\n\r\n    const [userHabits, setUserHabits] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    let currentDate = new Date(new Date().getTime())\r\n    currentDate.setHours(0,0,0,0)\r\n    \r\n    let token = localStorage.getItem('token')\r\n\r\n    const habitDeletedCheck = (e) => {\r\n        e.target.parentNode.parentNode.parentNode.classList.add('hidden');\r\n    }\r\n  \r\n    if (loading) {\r\n        fetch(`${serverUrl}/habits`, {\r\n            method: 'GET',\r\n            headers: {\r\n                Authorization: 'Bearer ' + token,\r\n                'Content-Type': 'application/json',\r\n                Timestamp: currentDate\r\n            }\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.message === \"jwt expired\" || res.message === \"Not authenticated.\") {\r\n                    localStorage.removeItem('token')\r\n                    validLoginCheck(false)\r\n\r\n                    history.go(0)\r\n                } else {\r\n                    setLoading(false)\r\n                    setUserHabits(res.editedHabits)\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div id='habit-list'>\r\n            { loading && <div className=\"habit-list-loading\">loading...</div>}\r\n            { !loading && \r\n            userHabits.length > 0 &&\r\n                userHabits.map((habit, index) => (\r\n                <HabitCard serverUrl={ serverUrl }key={ index } habit={ habit } habitDeletedCheck = { habitDeletedCheck } passedClass={ habit.updatedToday ? habit.active ? 'habit-card habit-logged-active' : 'habit-card habit-logged-passive' : 'habit-card'}/>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HabitList\r\n","import Button from './Button'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst UserOptions = () => {\r\n    return (\r\n        <div id=\"user-options\">\r\n            <div>\r\n            <Link to='/add-habit'>\r\n            <Button btnFunction=\"addHabitBtn\" btnDisplay=\"Add Habit\" />\r\n            </Link>\r\n            <Link to='/stats'>\r\n            </Link>\r\n            </div>\r\n            <Button btnFunction=\"logoutBtn\" btnDisplay=\"Logout\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserOptions\r\n","import Button from './Button'\r\nimport {Redirect} from 'react-router-dom'\r\nimport React, {useState} from 'react'\r\n\r\nconst AddHabit = ({serverUrl}) => {\r\n    const [newHabitSubmitted, setNewHabitSubmitted] = useState(false)\r\n    const [addHabitFormClosed, setAddHabitFormClosed] = useState(false)\r\n\r\n    if (newHabitSubmitted || addHabitFormClosed) {\r\n        return (<Redirect to='/' />)\r\n    }\r\n\r\n    const closeAddHabitForm = () => {\r\n      setAddHabitFormClosed(true)\r\n    }\r\n\r\n    const submitNewHabit = () => {\r\n\r\n        setNewHabitSubmitted(true)\r\n\r\n        const formData = new FormData(document.getElementById('new-habit-form'))\r\n        let formDataObj = {}\r\n        \r\n        // add local timezone date\r\n        let date = new Date(new Date(Date.now()).getTime())\r\n        date = date.setHours(0,0,0,0)\r\n        formData.append('createdAtDate', new Date(date))\r\n    \r\n        for (let key of formData.keys()) {\r\n            formDataObj[key] = formData.get(key)\r\n        }    \r\n\r\n        let token = localStorage.getItem('token')\r\n\r\n        fetch(`${serverUrl}/habits/add-habit/`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Authorization: 'Bearer ' + token,\r\n                'Content-Type': 'application/json',\r\n                Timestamp: new Date(date)\r\n            },\r\n            body: JSON.stringify(formDataObj)\r\n        })\r\n    }\r\n\r\n    return (\r\n      <div id='add-habit-container'>\r\n        <form id='new-habit-form'>\r\n          <h3>Add New Habit</h3>\r\n          <input id=\"habit-description\" name=\"description\" type=\"text\" placeholder=\"short description\" required/>\r\n          <div id=\"update-style-input\">\r\n            <input type=\"radio\" name=\"updateStyle\" value=\"active\" defaultChecked/>\r\n            <label htmlFor=\"active-update\">active</label>\r\n            <input type=\"radio\" name=\"updateStyle\" value=\"passive\" />\r\n            <label htmlFor=\"passive-update\">passive</label>\r\n          </div>\r\n          <div id=\"new-habit-goal\">\r\n            <input name=\"daysGoal\" type=\"number\" required/>\r\n            days\r\n            <label htmlFor=\"days\">out of</label>\r\n            <input name=\"daysLeft\" type=\"number\" required/>\r\n          </div>\r\n          <Button btnDisplay='Submit' btnFunction='submitNewHabitBtn' functionLiteral={submitNewHabit} />&nbsp;\r\n          <Button btnDisplay='Close' btnFunction='closeAddHabitForm' functionLiteral={closeAddHabitForm} />\r\n        </form>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default AddHabit\r\n","import ReactDOM from 'react-dom'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\n\r\nimport { useEffect } from 'react'\r\n\r\nimport About from './components/links/About'\r\nimport HowToUse from './components/links/HowToUse'\r\nimport Footer from './components/Footer'\r\nimport Login from './components/Login'\r\nimport HabitList from './components/HabitList'\r\nimport UserOptions from './components/UserOptions'\r\nimport AddHabit from './components/AddHabit'\r\n\r\nfunction App() {\r\n  console.log(process.env)\r\n\r\n  let serverUrl;\r\n\r\n  if (process.env.NODE_ENV === \"development\") {\r\n    serverUrl = 'http://localhost:5050'\r\n  } else {\r\n    serverUrl = 'https://habit-target-api.herokuapp.com'\r\n  }\r\n  \r\n  useEffect(() => {\r\n    if (localStorage.getItem('token')) {\r\n      validLoginCheck(true)\r\n    }\r\n  })\r\n\r\n  const validLoginCheck = (validated) => {\r\n    if (validated) {\r\n\r\n      // re-render to show only the habit list contain and user options\r\n      ReactDOM.render(\r\n      <Router>\r\n      <div id=\"total-container\">\r\n        <div className=\"inner-contents\"> \r\n          <Route exact path='/'>\r\n            <UserOptions />\r\n            <HabitList validLoginCheck={validLoginCheck}  serverUrl={serverUrl}/>\r\n          </Route>\r\n          <Route exact path='/add-habit'>\r\n            <AddHabit serverUrl={serverUrl} />\r\n          </Route>\r\n          <Route path='/about' component={About} />\r\n          <Route path='/how-to-use' component={HowToUse} />\r\n        </div>\r\n      </div>\r\n        <Footer />\r\n      </Router>\r\n      , document.getElementById('root'))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n    <div id=\"total-container\">\r\n      <div className=\"inner-contents\">\r\n      <Route exact path='/'>\r\n          <Login validLoginCheck={ validLoginCheck} serverUrl={serverUrl}/>\r\n      </Route>\r\n      <Route path='/about' component={About} />\r\n      <Route path='/how-to-use' component={HowToUse} />\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}