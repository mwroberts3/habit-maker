{"version":3,"sources":["components/Button.js","components/links/About.js","components/links/HowToUse.js","components/Footer.js","components/Login.js","components/DeleteHabit.js","components/HabitCard.js","components/HabitList.js","components/UserOptions.js","components/AddHabit.js","App.js","reportWebVitals.js","index.js"],"names":["Button","btnFunction","btnDisplay","functionLiteral","className","onClick","e","localStorage","removeItem","window","location","reload","preventDefault","About","id","to","style","marginBottom","HowToUse","color","Footer","href","target","size","marginRight","signUpConfirm","Login","validLoginCheck","useState","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","remember","setRemember","errMsg","setErrMsg","name","type","placeholder","value","onChange","checked","htmlFor","console","log","fetch","method","headers","body","JSON","stringify","rememberMe","then","res","json","token","setItem","message","validateLogin","validateSignup","document","getElementById","classList","remove","showConfirmPassword","DeleteHabit","habitDesc","habitDeletedCheck","getItem","Authorization","description","deleteHabitRequest","HabitCard","habit","passedClass","contains","failed","completed","lastUpdated","Date","getTime","setHours","logHabit","active","daysLogged","goal","daysLeft","HabitList","userHabits","setUserHabits","loading","setLoading","currentDate","Timestamp","editedHabits","length","map","index","updatedToday","UserOptions","AddHabit","newHabitSubmitted","setNewHabitSubmitted","addHabitFormClosed","setAddHabitFormClosed","required","defaultChecked","formData","FormData","formDataObj","date","now","append","keys","key","get","App","useEffect","validated","ReactDOM","render","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.5eb467f9.chunk.js","sourcesContent":["const Button = ({ btnFunction, btnDisplay, functionLiteral }) => {\r\n    return (\r\n        <button className=\"light-btn\" onClick={\r\n            (e) => {\r\n                if (btnFunction === 'logoutBtn') {\r\n                    localStorage.removeItem('token')\r\n                    window.location.reload()\r\n                } else if (btnFunction === 'submitNewHabitBtn') {\r\n                    // should make sure that all form fields are filled out before add new habit to the database\r\n                    e.preventDefault()\r\n                    functionLiteral()\r\n                } else if (btnFunction === 'closeAddHabitForm') {\r\n                    e.preventDefault()\r\n                    functionLiteral()\r\n                }\r\n            }\r\n        }>\r\n            { btnDisplay }\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import Button from '../Button'\r\nimport { Link } from 'react-router-dom' \r\n\r\nconst About = () => {\r\n    return (\r\n        <div id=\"about-container\">\r\n            <h2>About</h2>\r\n            <span>v1.0.0</span>\r\n            <span>Created 2021</span>\r\n            <p>Habit Maker was created for the purpose to help users develop and maintain new habits.</p>\r\n            <p>It also works as a general todo list or project tracker.</p>\r\n            <Link to='/'>\r\n                <Button btnDisplay='Back' btnFunction='backToLoginBtn' style={{marginBottom: '5px'}}/>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import Button from '../Button'\r\nimport { Link } from 'react-router-dom' \r\n\r\nconst HowToUse = () => {\r\n    return (\r\n        <div id=\"how-to-use-container\">\r\n            <h2>How To Use</h2>\r\n            <p>Click the 'Add Habit' button to add a new habit.</p>\r\n            <p>Fill out the form and submit.</p>\r\n            <p>How often you need to log your progress depends on whether a given habit is <span style={{color: 'green'}}>active</span> or <span style={{color: 'red'}}>passive</span></p>\r\n            <p>Active habits need to be updated everyday.</p>\r\n            <p>Passive habits only need to be updated if a habit wasn't done that day.</p>\r\n            <Link to='/'>\r\n                <Button btnDisplay='Back' btnFunction='backToLoginBtn' \r\n                style={{marginBottom: '5px'}}/>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HowToUse\r\n","import { Link } from 'react-router-dom'\r\nimport { FaGithubAlt } from 'react-icons/fa'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div id='footer'>\r\n            <div id='footer-links'>\r\n                <span><Link to=\"/how-to-use\">How to Use</Link></span>\r\n                <div className='footer-link-separator'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\r\n                <span><Link to=\"/about\">About</Link></span>\r\n                <div className='footer-link-separator'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\r\n                <a href=\"https://github.com/mwroberts3/habit-tracker\" target=\"blank\">\r\n            <FaGithubAlt size={20} style={{marginRight: '5px'}}/>\r\n            </a>\r\n                <div className='footer-link-separator'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\r\n            <span>v1.0.0 2021</span> \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { useState } from 'react'\r\nimport { FaCubes } from 'react-icons/fa'\r\n\r\nlet signUpConfirm = false\r\n\r\nconst Login = ( {validLoginCheck} ) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [remember, setRemember] = useState(false)\r\n    \r\n    const [errMsg, setErrMsg] = useState('')\r\n\r\n    // http://localhost:5050\r\n\r\n    const validateLogin = (e) => {\r\n        e.preventDefault()\r\n        console.log('login button clicked')\r\n        console.log(email, password, remember)\r\n\r\n        fetch(`https://habit-maker-api.herokuapp.com/login`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: email,\r\n                password: password,\r\n                rememberMe: remember\r\n            })\r\n        })\r\n        .then(res => {\r\n            return res.json()\r\n        })\r\n        .then(res => {\r\n            if (res.token) {\r\n                console.log(res.token)\r\n                localStorage.setItem('token', res.token)\r\n                validLoginCheck(true)\r\n            } else {\r\n                setErrMsg(res.message)\r\n            }\r\n        })\r\n    }\r\n\r\n    const showConfirmPassword = (e) => {\r\n        e.preventDefault()\r\n        // console.log(signupSequence)\r\n        document.getElementById('confirm-password-input').classList.remove('hidden')\r\n    \r\n        signUpConfirm = true\r\n    }\r\n    \r\n    const validateSignup = (e) => {\r\n        e.preventDefault()\r\n\r\n        fetch(`https://habit-maker-api.herokuapp.com/signup`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                \"email\": email,\r\n                \"password\": password,\r\n                \"confirmPassword\": confirmPassword,\r\n            })\r\n        })\r\n        .then((res) => res.json())\r\n        .then(res => {\r\n            if (res.token) {\r\n                console.log(res.token)\r\n                localStorage.setItem('token', res.token)\r\n                validLoginCheck(true)\r\n            } else {\r\n                setErrMsg(res.message)\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div id='login-container'>\r\n        <div>\r\n            <h1 id=\"login-header\">Habit Maker <FaCubes className=\"header-icon\" size={35}/></h1>&nbsp;\r\n        </div>\r\n        <p id='error-msg-display'>{errMsg !== '' ? `${errMsg}` : (<span>&nbsp;</span>)}</p>\r\n        <form className=\"login\" id=\"login-signup-form\" name=\"login\"> \r\n            <input id=\"login-email\" name=\"email\" type=\"text\" placeholder=\"email\" value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n            <input id=\"login-pw\" name=\"password\" type=\"password\" placeholder=\"password\" value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n            <input id='confirm-password-input' className='hidden' name=\"confirmPassword\" type=\"password\" placeholder=\"confirm password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}/>\r\n            <div id='remember-me-container'>\r\n            <input id=\"store-session-checkbox\" type=\"checkbox\" value={remember} onChange={(e) => setRemember(e.target.checked)}/>\r\n            <label htmlFor=\"remember-login\">Remember Me</label>\r\n            </div>\r\n            <div id='login-btns-container'>\r\n            <button id=\"login-submit\" className=\"light-btn\" onClick={(e) => {\r\n                validateLogin(e)\r\n            }}>Login</button>\r\n            <button id=\"signup-submit\" className=\"light-btn\" onClick={(e) => { \r\n                signUpConfirm ? \r\n                validateSignup(e) :showConfirmPassword(e)                    \r\n            }}>Signup</button>\r\n            </div>\r\n        </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import {Redirect} from 'react-router-dom'\r\n\r\nconst DeleteHabit = ({ habitDesc, habitDeletedCheck }) => {\r\n    const deleteHabitRequest = () => {\r\n        let token = localStorage.getItem('token')\r\n\r\n        fetch(`https://habit-maker-api.herokuapp.com/habits/delete-habit`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                Authorization: 'Bearer ' + token,\r\n                'Content-Type': 'application/json'\r\n            }, \r\n            body: JSON.stringify({ description: habitDesc })\r\n        })\r\n        .then(() => {\r\n            habitDeletedCheck()\r\n            return (<Redirect to='/' />)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='delete-habit-btn' onClick={() => {\r\n            deleteHabitRequest()\r\n        }}>\r\n            <span className='delete-btn-x'>\r\n                x\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeleteHabit\r\n","import DeleteHabit from './DeleteHabit'\r\n\r\nconst HabitCard = ({ habit, habitDeletedCheck, passedClass }) => {\r\n    const logHabit = (habit) => {\r\n        // Need to somehow check if habit has been completed and I guess log it to some kind of stats collection to then be displayed in the stats component\r\n        let lastUpdated = new Date(new Date().getTime())\r\n        lastUpdated.setHours(0,0,0,0)\r\n\r\n        let token = localStorage.getItem('token')\r\n\r\n        fetch(`https://habit-maker-api.herokuapp.com/habits/log-habit`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Authorization: 'Bearer ' + token,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                habitDesc: habit.description,\r\n                lastUpdated\r\n            })\r\n        })\r\n        .then(() => {\r\n            habitDeletedCheck()\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div id={habit.description} className={passedClass} onClick={(e) => {\r\n            if (!e.target.classList.contains('delete-btn-x') && !habit.failed && !habit.completed) logHabit(habit)\r\n        }}>\r\n            { !habit.failed && !habit.completed && \r\n            <div>\r\n                <p>{habit.description}</p>\r\n                <p className={habit.active ? 'active' : 'passive'}>{habit.active ? 'active' : 'passive'}</p>\r\n                <p>Goal: {habit.daysLogged} / {habit.goal} ({habit.daysLeft})\r\n                </p>\r\n                <DeleteHabit habitDesc={habit.description} habitDeletedCheck={ habitDeletedCheck }/>\r\n            </div> }\r\n            { habit.failed && \r\n            <div>\r\n                <p>{habit.description} Failed</p>\r\n                <p>{habit.daysLogged} / {habit.goal}</p>\r\n                <DeleteHabit habitDesc={habit.description} habitDeletedCheck={ habitDeletedCheck }/>\r\n            </div>\r\n            }\r\n            { habit.completed && \r\n            <div>\r\n                <p>{habit.description} Completed</p>\r\n                <p>{habit.daysLogged} / {habit.goal}</p>\r\n                <DeleteHabit habitDesc={habit.description} habitDeletedCheck={ habitDeletedCheck }/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HabitCard\r\n","import { useState } from 'react'\r\nimport HabitCard from './HabitCard'\r\n\r\nconst HabitList = ({validLoginCheck}) => {\r\n    const [userHabits, setUserHabits] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    let currentDate = new Date(new Date().getTime())\r\n    currentDate.setHours(0,0,0,0)\r\n    \r\n    let token = localStorage.getItem('token')\r\n\r\n    const habitDeletedCheck = () => {\r\n        setLoading(true)\r\n    }\r\n    \r\n    if (loading) {\r\n        // Need to somehow check if habit has been completed and I guess log it to some kind of stats collection to then be displayed in the stats component\r\n\r\n        setLoading(false)\r\n        fetch(`https://habit-maker-api.herokuapp.com/habits`, {\r\n            method: 'GET',\r\n            headers: {\r\n                Authorization: 'Bearer ' + token,\r\n                'Content-Type': 'application/json',\r\n                Timestamp: currentDate\r\n            }\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                console.log(res)\r\n\r\n                if (res.message === \"jwt expired\" || res.message === \"Not authenticated.\") {\r\n                    localStorage.removeItem('token')\r\n                    validLoginCheck(false)\r\n\r\n                    // this should actually reload the login page with a 'session expired' message\r\n                    window.location.reload()\r\n                } else {\r\n                    setUserHabits(res.editedHabits)\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div id='habit-list'>\r\n            {\r\n            userHabits.length > 0 &&\r\n                userHabits.map((habit, index) => (\r\n                <HabitCard key={ index } habit={ habit } habitDeletedCheck = { habitDeletedCheck } passedClass={ habit.updatedToday ? habit.active ? 'habit-card habit-logged-active' : 'habit-card habit-logged-passive' : 'habit-card'}/>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HabitList\r\n","import Button from './Button'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst UserOptions = () => {\r\n    return (\r\n        <div id=\"user-options\">\r\n            <div>\r\n            <Link to='/add-habit'>\r\n            <Button btnFunction=\"addHabitBtn\" btnDisplay=\"Add Habit\" />\r\n            </Link>\r\n            <Link to='/stats'>\r\n            </Link>\r\n            </div>\r\n            <Button btnFunction=\"logoutBtn\" btnDisplay=\"Logout\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserOptions\r\n","import Button from './Button'\r\nimport {Redirect} from 'react-router-dom'\r\nimport React, {useState} from 'react'\r\n\r\nconst AddHabit = () => {\r\n    const [newHabitSubmitted, setNewHabitSubmitted] = useState(false)\r\n    const [addHabitFormClosed, setAddHabitFormClosed] = useState(false)\r\n\r\n    if (newHabitSubmitted || addHabitFormClosed) {\r\n        return (<Redirect to='/' />)\r\n    }\r\n\r\n    const closeAddHabitForm = () => {\r\n      setAddHabitFormClosed(true)\r\n    }\r\n\r\n    const submitNewHabit = () => {\r\n\r\n        setNewHabitSubmitted(true)\r\n\r\n        const formData = new FormData(document.getElementById('new-habit-form'))\r\n        let formDataObj = {}\r\n    \r\n        // add local timezone date\r\n        let date = new Date(new Date(Date.now()).getTime())\r\n        date = date.setHours(0,0,0,0)\r\n        formData.append('createdAtDate', new Date(date))\r\n    \r\n        for (let key of formData.keys()) {\r\n            formDataObj[key] = formData.get(key)\r\n        }    \r\n\r\n        let token = localStorage.getItem('token')\r\n\r\n        fetch('https://habit-maker-api.herokuapp.com/habits/add-habit', {\r\n            method: 'POST',\r\n            headers: {\r\n                Authorization: 'Bearer ' + token,\r\n                'Content-Type': 'application/json',\r\n                Timestamp: new Date(date)\r\n            },\r\n            body: JSON.stringify(formDataObj)\r\n        })\r\n    }\r\n\r\n    return (\r\n      <div id='add-habit-container'>\r\n        <form id='new-habit-form'>\r\n          <h3>Add New Habit</h3>\r\n          <label htmlFor=\"description\">Short Description</label>\r\n          <input name=\"description\" type=\"text\" required/>\r\n          <h3>Update Style</h3>\r\n          <input type=\"radio\" name=\"updateStyle\" value=\"active\" />\r\n          <label htmlFor=\"active-update\">active</label>\r\n          <input type=\"radio\" name=\"updateStyle\" value=\"passive\" defaultChecked />\r\n          <label htmlFor=\"passive-update\">passive</label>\r\n          <div>\r\n            <label htmlFor=\"days\">Goal</label>\r\n            <input name=\"daysGoal\" type=\"number\" required/>\r\n            Days\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"days\">Time</label>\r\n            <input name=\"daysLeft\" type=\"number\" required/>\r\n            Days\r\n          </div>\r\n          <Button btnDisplay='Submit' btnFunction='submitNewHabitBtn' functionLiteral={submitNewHabit} />\r\n          <Button btnDisplay='Close' btnFunction='closeAddHabitForm' functionLiteral={closeAddHabitForm} />\r\n        </form>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default AddHabit\r\n","import ReactDOM from 'react-dom'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport { useEffect } from 'react'\n\nimport About from './components/links/About'\nimport HowToUse from './components/links/HowToUse'\nimport Footer from './components/Footer'\nimport Login from './components/Login'\nimport HabitList from './components/HabitList'\nimport UserOptions from './components/UserOptions'\nimport AddHabit from './components/AddHabit'\n\nfunction App() {\n  let loggedIn = false\n\n  useEffect(() => {\n    if (localStorage.getItem('token')) {\n      validLoginCheck(true)\n    }\n  })\n\n  const validLoginCheck = (validated) => {\n    if (validated) {\n\n      // re-render to show only the habit list contain and user options\n      ReactDOM.render(\n      <Router>\n      <div id=\"total-container\">\n        <Route exact path='/'>\n          <UserOptions />\n          <HabitList validLoginCheck={validLoginCheck}/>\n        </Route>\n        <Route path='/add-habit' component={AddHabit} />\n        <Route path='/about' component={About} />\n        <Route path='/how-to-use' component={HowToUse} />\n        <Footer />\n      </div>\n      </Router>\n      , document.getElementById('root'))\n    }\n  }\n\n  return (\n    <Router>\n    <div id=\"total-container\">\n      <Route exact path='/'>\n          <Login validLoginCheck={ validLoginCheck}/>\n      </Route>\n      <Route path='/about' component={About} />\n      <Route path='/how-to-use' component={HowToUse} />\n      <Footer />\n    </div>\n    </Router>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}